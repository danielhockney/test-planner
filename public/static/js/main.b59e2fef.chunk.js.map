{"version":3,"sources":["app/core/configs.js","app/core/CRUD.js","app/constants/Colors.js","app/components/NavbarComponent.js","app/pages/LoginPage.js","app/pages/RegisterPage.js","app/components/FormComponent.js","app/components/HistoryItemComponent.js","app/components/HistoryComponent.js","app/components/BasicContainerComponent.js","app/pages/ConfigurePage.js","app/pages/MainPage.js","app/pages/Error404.js","App.js","serviceWorker.js","index.js","app/core/validator.js"],"names":["CONFIGS","DOMAIN","GET","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","responseObj","wrap","_context","prev","next","fetch","concat","method","headers","Accept","Content-Type","sent","json","abrupt","t0","Error","message","stop","this","_x","apply","arguments","POST","_ref2","_callee2","data","_context2","body","JSON","stringify","_x2","_x3","PUT","_ref3","_callee3","_context3","_x4","_x5","DELETE","_ref4","_callee4","_context4","_x6","_x7","Colors","black","white","grey","red","green","pinkishGrey","NavbarComponent","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","react_default","createElement","Navbar","color","expand","NavLink","to","isLoggedIn","tag","Link","style","styles","title","Collapse","isOpen","navbar","Nav","className","NavItem","pageTitle","Button","onClick","logoutAction","React","Component","fontWeight","fontSize","validator","require","LoginPage","loginUser","isValid","success","localStorage","setItem","id","setState","error","handleKeyPress","e","key","userData","email","password","Redirect","NavbarComponent_NavbarComponent","Alert","alertStyle","container","Form","FormGroup","Label","for","Input","value","onChange","assign","target","onFocus","onKeyPress","type","name","placeholder","marginTop","marginLeft","marginRight","RegisterPage","registerUser","username","repeatPassword","FormComponent","buttonStyle","backgroundColor","width","borderRadius","border","inputStyle","sendRequest","amount","validateInput","isNaN","pageType","actionType","configureAction","mainAction","display","formType","buttonsContainer","flexDirection","justifyContent","HistoryItemComponent","roundIcon","alignItems","height","generateDate","date","moment","format","replace","historyContainer","historyType","roundIconText","historyDataContainer","amountStyle","dateStyle","createdDate","editAction","deleteAction","marginBottom","borderWidth","borderColor","HistoryComponent","renderHistoryItem","histories","map","history","index","HistoryItemComponent_HistoryItemComponent","createdAt","deleteHistory","editHistory","BasicContainerComponent","headerContainer","titleStyle","line","HistoryComponent_HistoryComponent","historiesData","historyDelete","historyEdit","FormComponent_FormComponent","mainRequest","configureRequest","padding","ConfigurePage","logout","removeItem","configure","getItem","window","location","href","BasicContainerComponent_BasicContainerComponent","MainPage","toggle","modalVisible","editingHistory","createHistory","userId","user","console","log","mainTitle","monthlyAmount","dailyAmount","paddingLeft","updateHistory","oldHistory","newHistory","_x8","Date","Modal","fade","ModalHeader","ModalBody","Error404","class","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","generateErrorObject","module","exports","isEmpty","isLength","min","max","isEmail","isAscii"],"mappings":"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","file":"static/js/main.b59e2fef.chunk.js","sourcesContent":["const HOST = 'localhost';\nconst PORT = 3000;\n\nconst CONFIGS = {\n  // DOMAIN: `http://${HOST}:${PORT}`,\n  DOMAIN: 'https://plannertask.herokuapp.com'\n};\n\nexport default CONFIGS;\n","import CONFIGS from './configs';\n\nexport const GET = async url => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    let responseObj = response.json();\n\n    return responseObj;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const POST = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    let responseObj = response.json();\n\n    return responseObj;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const PUT = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    let responseObj = response.json();\n\n    return responseObj;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const DELETE = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'DELETE',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    let responseObj = response.json();\n\n    return responseObj;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n","const Colors = {\n  black: '#000000',\n  white: '#ffffff',\n  grey: '#212529',\n  red: '#f63f45',\n  green: '#61dd71',\n  pinkishGrey: '#343a40'\n};\n\nexport default Colors;\n","import React from 'react';\nimport { Collapse, Navbar, Nav, NavItem, Button, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Colors from '../constants/Colors';\n\nexport default class NavbarComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar color=\"dark\"  expand=\"md\">\n          <NavLink to={this.props.isLoggedIn ? '/configure' : '/login'} tag={Link} style={styles.title}>Planner</NavLink>\n          <Collapse isOpen={true} navbar>\n          {\n            this.props.isLoggedIn ?\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink to=\"/main\" tag={Link} style={styles.pageTitle}>Main</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink to=\"/configure\" tag={Link} style={styles.pageTitle}>Configure</NavLink>\n                </NavItem>\n                <NavItem>\n                  <Button onClick={()=> this.props.logoutAction()}>Log out</Button>\n                </NavItem>\n              </Nav> :\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink to=\"/login\" tag={Link} style={styles.pageTitle}>Login</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink to=\"/register\" tag={Link} style={styles.pageTitle}>Register</NavLink>\n                </NavItem>\n              </Nav>\n            }\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  title: {\n    color: Colors.white,\n    fontWeight: 'bold',\n    fontSize: 25\n  },\n  pageTitle: {\n    color: Colors.white\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, Alert } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport { POST } from '../core/CRUD';\n\nimport NavbarComponent from '../components/NavbarComponent';\n\nconst validator = require('../core/validator');\n\nexport default class LoginPage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      userData: {\n        email: '',\n        password: ''\n      },\n      error: '',\n      isLoggedIn: false\n    };\n  }\n\n  loginUser = async data => {\n    let isValid = validator(data);\n    if(isValid.success){\n      try {\n        let response = await POST('login', data);\n        if(response.success){\n          localStorage.setItem('userId', response.data.id);\n          this.setState({isLoggedIn: true});\n        } else {\n          this.setState({error: response.error});\n        }\n      } catch (error) {\n        this.setState({\n          error: error.message\n        });\n      }\n    } else {\n      this.setState({\n        error: isValid.message\n      });\n    }\n  }\n\n  handleKeyPress = async e => {\n    if(e.key === 'Enter') {\n      await this.loginUser(this.state.userData);\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        {this.state.isLoggedIn ? <Redirect to=\"/configure\"/> : null}\n        <NavbarComponent isLoggedIn={this.state.isLoggedIn}/>\n        {\n          this.state.error ?\n          <Alert color=\"danger\" className=\"col-lg-4\" style={styles.alertStyle}>{this.state.error}</Alert>\n          : null\n        }\n        <div className='row justify-content-center'  style={styles.container}>\n          <Form className='col-6 col-lg-2'>\n              <div>\n                <FormGroup>\n                 <Label for=\"email\">Email</Label>\n                 <Input value={this.state.userData.email}\n                        onChange={(email)=> this.setState(Object.assign(this.state.userData, {email: email.target.value}))}\n                        onFocus={() => this.setState({error: ''})}\n                        onKeyPress={this.handleKeyPress}\n                        type=\"email\"\n                        name=\"email\"\n                        id=\"email\"\n                        placeholder=\"Enter your email\"\n                 />\n               </FormGroup>\n               <FormGroup>\n                 <Label for=\"password\">Password</Label>\n                 <Input value={this.state.userData.password}\n                        onChange={(password)=> this.setState(Object.assign(this.state.userData, {password: password.target.value}))}\n                        onFocus={() => this.setState({error: ''})}\n                        onKeyPress={this.handleKeyPress}\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"password\"\n                        placeholder=\"Enter your password\"\n                />\n               </FormGroup>\n               <Input className='btn btn-primary'\n                      value='Login'\n                      type=\"button\"\n                      onClick={() => this.loginUser(this.state.userData)}\n               />\n              </div>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  container: {\n    marginTop: '5%'\n  },\n  alertStyle: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 20\n  }\n};\n","import React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, Alert } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\n\nimport { POST } from '../core/CRUD';\nimport NavbarComponent from '../components/NavbarComponent';\n\nconst validator = require('../core/validator');\n\nexport default class RegisterPage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      userData: {\n        username: '',\n        email: '',\n        password: '',\n        repeatPassword: ''\n      },\n      error: '',\n      isLoggedIn: false\n    };\n  }\n\n  registerUser = async data => {\n    let isValid = validator(data);\n    if(isValid.success){\n      try {\n        let response = await POST('register', data);\n        if(response.success){\n          localStorage.setItem('userId', response.data.id);\n          this.setState({isLoggedIn: true});\n        } else {\n          this.setState({error: response.error});\n        }\n      } catch (error) {\n        this.setState({\n          error: error.message\n        });\n      }\n    } else {\n      this.setState({\n        error: isValid.message\n      });\n    }\n  }\n\n  handleKeyPress = async e => {\n    if(e.key === 'Enter') {\n      await this.registerUser(this.state.userData);\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        {this.state.isLoggedIn ? <Redirect to=\"/configure\"/> : null}\n        <NavbarComponent isLoggedIn={this.state.isLoggedIn}/>\n        {\n          this.state.error ?\n          <Alert color=\"danger\" className=\"col-lg-4\" style={styles.alertStyle}>{this.state.error}</Alert>\n          : null\n        }\n        <div className='row justify-content-center'  style={styles.container}>\n          <Form className='col-6 col-lg-2'>\n              <div>\n                <FormGroup>\n                 <Label for=\"username\">Username</Label>\n                 <Input value={this.state.userData.username}\n                        onChange={(username)=> this.setState(Object.assign(this.state.userData, {username: username.target.value}))}\n                        onFocus={() => this.setState({error: ''})}\n                        onKeyPress={this.handleKeyPress}\n                        type=\"text\"\n                        name=\"username\"\n                        id=\"username\"\n                        placeholder=\"Enter your username\"\n                 />\n               </FormGroup>\n                <FormGroup>\n                 <Label for=\"email\">Email</Label>\n                 <Input value={this.state.userData.email}\n                        onChange={(email)=> this.setState(Object.assign(this.state.userData, {email: email.target.value}))}\n                        onFocus={() => this.setState({error: ''})}\n                        onKeyPress={this.handleKeyPress}\n                        type=\"email\"\n                        name=\"email\"\n                        id=\"email\"\n                        placeholder=\"Enter your email\"\n                 />\n               </FormGroup>\n               <FormGroup>\n                 <Label for=\"password\">Password</Label>\n                 <Input value={this.state.userData.password}\n                        onChange={(password)=> this.setState(Object.assign(this.state.userData, {password: password.target.value}))}\n                        onFocus={() => this.setState({error: ''})}\n                        onKeyPress={this.handleKeyPress}\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"password\"\n                        placeholder=\"Enter your password\"\n                />\n               </FormGroup>\n               <FormGroup>\n                 <Label for=\"repeatPassword\">Repeat password</Label>\n                 <Input value={this.state.userData.repeatPassword}\n                        onChange={(repeatPassword)=> this.setState(Object.assign(this.state.userData, {repeatPassword: repeatPassword.target.value}))}\n                        onFocus={() => this.setState({error: ''})}\n                        onKeyPress={this.handleKeyPress}\n                        type=\"password\"\n                        name=\"repeatPassword\"\n                        id=\"repeatPassword\"\n                        placeholder=\"Repeat your password\"\n                />\n               </FormGroup>\n               <Input className='btn btn-primary'\n                      value='Register'\n                      type=\"button\"\n                      onClick={() => this.registerUser(this.state.userData)}\n               />\n              </div>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  container: {\n    marginTop: '5%'\n  },\n  alertStyle: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 20\n  }\n};\n","import React, { Component } from 'react';\nimport Colors from '../constants/Colors';\nimport { Button, Input } from 'reactstrap';\n\nexport default class FormComponent extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      amount: '',\n      error: ''\n    };\n  }\n\n  buttonStyle = (color, type) => {\n    return {\n      backgroundColor: Colors[color],\n      color: Colors.white,\n      width: type === 'configure' ? '25%' : '48%',\n      borderRadius: 30,\n      border: 'none'\n    };\n  }\n\n  inputStyle = type => {\n    return {\n      width: type === 'configure' ? '75%' : '50%',\n      marginRight: type === 'configure' ? '2%' : '2%',\n      backgroundColor: Colors.pinkishGrey,\n      borderRadius: 30,\n      border: 'none',\n      color: Colors.white\n    };\n  }\n\n  handleKeyPress = async e => {\n    if(e.key === 'Enter') {\n      await this.sendRequest(this.state.amount, 'configure');\n    }\n  }\n\n  validateInput = amount => {\n    if(!amount){\n      return { success: false, error: 'Please enter your monthly amount!' };\n    }\n    if(isNaN(amount)){\n      return { success: false, error: 'Please type valid numbers for amount!' };\n    }\n    if(amount < 0){\n      return { success: false, error: 'Please type only positive numbers!' };\n    }\n    if(amount > 999999999999){\n      return { success: false, error: 'Amount can not be more then 999999999999!' };\n    } else {\n      return { success: true };\n    }\n  }\n\n  sendRequest = (amount, pageType, actionType) => {\n    if(this.validateInput(amount).success){\n      this.setState({amount: ''});\n      if(pageType === 'configure'){\n        this.props.configureAction(amount);\n      } else {\n        if(actionType && actionType === 'expense'){\n          this.props.mainAction(amount, actionType);\n        } else {\n          this.props.mainAction(amount, actionType);\n        }\n      }\n    } else {\n      this.setState({error: this.validateInput(amount).error, amount: ''});\n    }\n  }\n\n  render(){\n    return(\n      <div style={styles.container}>\n        {this.state.error ? <div style={{color: 'red'}}>{this.state.error}</div> : null}\n        <div style={{display: 'flex'}}>\n          <Input value={this.state.amount}\n                 style={this.inputStyle(this.props.formType)}\n                 onChange={amount => this.setState({amount: amount.target.value, error: ''})}\n                 onFocus={() => this.setState({error: ''})}\n                 onKeyPress={this.props.formType === 'configure' ? this.handleKeyPress : null}\n                 type=\"number\"\n          />\n          {\n            this.props.formType === 'configure' ?\n            <Button onClick={() => this.sendRequest(this.state.amount, this.props.formType)} style={this.buttonStyle('green', this.props.formType)}>Set</Button> :\n            <div style={styles.buttonsContainer}>\n              <Button onClick={() => this.sendRequest(this.state.amount, this.props.formType, 'expense')} style={this.buttonStyle('red', this.props.formType)}>Expense</Button>\n              <Button onClick={() => this.sendRequest(this.state.amount, this.props.formType, 'income')} style={this.buttonStyle('green', this.props.formType)}>Income</Button>\n            </div>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'column'\n  },\n  buttonsContainer: {\n    display: 'flex',\n    width: '50%',\n    justifyContent: 'space-between'\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport Colors from '../constants/Colors';\nimport moment from 'moment';\n\nexport default class HistoryItemComponent extends Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n\n  roundIcon = (type) => {\n    return {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: type === 'expense' ? Colors.red : Colors.green,\n      width: 70,\n      height: 70,\n      borderRadius: 50\n    }\n  }\n\n  generateDate = date => {\n    return moment(date).format('L').replace(/\\//g, '.');\n  }\n\n  render(){\n    return(\n      <div style={styles.container}>\n        <div style={styles.historyContainer}>\n          <div style={this.roundIcon(this.props.historyType)}>\n            <div style={styles.roundIconText}>{this.props.historyType === 'expense' ? '-' : '+'}</div>\n          </div>\n          <div style={styles.historyDataContainer}>\n            <div style={styles.amountStyle}>{this.props.amount} R</div>\n            <div style={styles.dateStyle}>{this.generateDate(this.props.createdDate)}</div>\n          </div>\n        </div>\n        <div style={styles.buttonStyle}>\n          <Button style={{marginRight: '15%', display: 'flex'}} color=\"info\" onClick={() => this.props.editAction()}>Edit</Button>\n          <Button style={{ display: 'flex'}} color=\"danger\" onClick={() => this.props.deleteAction()}>Delete</Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginBottom: '2%',\n    borderWidth: 5,\n    borderColor: 'white'\n  },\n  roundIconText: {\n    color: Colors.white,\n    fontSize: 40,\n    fontWeight: 'bold'\n  },\n  amountStyle:{\n    display: 'flex',\n    color: Colors.white,\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  historyContainer: {\n    display: 'flex',\n    width: '100%'\n  },\n  historyDataContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginLeft: '5%'\n  },\n  dateStyle: {\n    color: Colors.white,\n    display: 'flex'\n  },\n  buttonStyle: {\n    justifyContent: 'space-between',\n    color: Colors.white,\n    display: 'flex',\n    alignItems: 'center',\n    width: 60\n  }\n}\n","import React, { Component } from 'react';\nimport HistoryItemComponent from './HistoryItemComponent';\n\nexport default class HistoryComponent extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  renderHistoryItem = (histories) => {\n    return histories.map((history, index) => (\n      <HistoryItemComponent\n        key={index}\n        historyType={history.historyType}\n        amount={history.amount}\n        createdDate={history.createdAt}\n        deleteAction={() => this.props.deleteHistory(history)}\n        editAction={() => this.props.editHistory(history)}\n      />\n    ));\n  }\n\n  render(){\n    return(\n      <div style={styles.container}>\n        {this.renderHistoryItem(this.props.histories)}\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '1%',\n    flexDirection: 'column',\n    width: '100%'\n  }\n}\n","import React, { Component } from 'react';\nimport Colors from '../constants/Colors';\n\nimport FormComponent from './FormComponent';\nimport HistoryComponent from './HistoryComponent';\n\nexport default class BasicContainerComponent extends Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n\n  render(){\n    return(\n      <div style={styles.container}>\n        <div style={styles.headerContainer}>\n          <div style={styles.titleStyle}>{this.props.title}</div>\n          <hr style={styles.line}></hr>\n          {\n            !this.props.history ?\n            <FormComponent\n              formType={this.props.pageType}\n              mainAction={(amount, type) => this.props.mainRequest(amount, type)}\n              configureAction={amount => this.props.configureRequest(amount)}\n            /> :\n            <HistoryComponent\n              histories={this.props.historiesData}\n              deleteHistory={(history) => this.props.historyDelete(history)}\n              editHistory={(history) => this.props.historyEdit(history)}\n            />\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '1%'\n  },\n  headerContainer: {\n    display: 'flex',\n    width: '50%',\n    backgroundColor: Colors.grey,\n    padding: '50px 120px 50px 120px',\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  },\n  titleStyle: {\n    color: Colors.white,\n    fontSize: 25,\n    fontWeight: 'bold',\n  },\n  line: {\n    border: '5px solid',\n    borderColor: Colors.red,\n    width: '100%'\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport NavbarComponent from '../components/NavbarComponent';\nimport BasicContainerComponent from '../components/BasicContainerComponent';\n\nimport { POST } from '../core/CRUD';\n\nexport default class ConfigurePage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n\n  logout = () => {\n    localStorage.removeItem('userId');\n    this.setState({isLoggedIn: false});\n  }\n\n  async componentWillMount(){\n    if(localStorage.getItem('userId')){\n      this.setState({isLoggedIn: true});\n    }\n  }\n\n  configure = async amount => {\n    try {\n      let response = await POST('users/mounthlyAmount/' + localStorage.getItem('userId'), {amount});\n      if(response.success){\n        window.location.href = '/main';\n      } else {\n        this.setState({error: response.error});\n      }\n    } catch (error) {\n      this.setState({error: error.message});\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        {!this.state.isLoggedIn ? <Redirect to=\"/login\"/> : null}\n        <NavbarComponent logoutAction={this.logout} isLoggedIn={this.state.isLoggedIn}/>\n        <BasicContainerComponent\n          title='Monthly amount'\n          pageType='configure'\n          configureRequest={amount => this.configure(amount)}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport NavbarComponent from '../components/NavbarComponent';\nimport BasicContainerComponent from '../components/BasicContainerComponent';\nimport FormComponent from '../components/FormComponent';\n\nimport { GET, POST, DELETE, PUT } from '../core/CRUD';\n\nexport default class MainPage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      modalVisible: false,\n      user: {},\n      editingHistory: {},\n      error: ''\n    };\n  }\n\n  async componentWillMount(){\n    if(localStorage.getItem('userId')){\n      this.setState({isLoggedIn: true});\n      try {\n        let response = await GET('users/' + localStorage.getItem('userId'));\n        if(response.success){\n          this.setState({user: response.data});\n        } else {\n          this.setState({error: response.error});\n        }\n      } catch (error) {\n        this.setState({error: error.message});\n      }\n    }\n  }\n\n  logout = () => {\n    localStorage.removeItem('userId');\n    this.setState({isLoggedIn: false});\n  }\n\n  toggle = () => {\n    this.setState({\n      modalVisible: !this.state.modalVisible,\n      editingHistory: {},\n      error: ''\n    });\n  }\n\n  createHistory = async (amount, type, date, userId) => {\n    try {\n      let response = await POST('history/create', {\n        amount: amount,\n        historyType: type,\n        createdAt: date,\n        userId: userId\n      });\n      if(response.success){\n        this.setState({user: response.data, error: ''});\n      } else {\n        console.log();\n        this.setState({error: response.error});\n      }\n    } catch (error) {\n      console.log(error.message);\n      this.setState({error: error.message});\n    }\n  }\n\n  mainTitle = (monthlyAmount, dailyAmount) => (\n    <div style={{display: 'flex', width: '100%'}}>\n      <div style={{display: 'flex'}}>You have</div>\n      <div style={{display: 'flex', flexDirection: 'column', paddingLeft: '2%', width: 500}}>\n        <div style={{display: 'flex'}}>{monthlyAmount} R left for the month</div>\n        <div style={{display: 'flex'}}>{dailyAmount} R left for the day</div>\n      </div>\n    </div>\n  )\n\n  deleteHistory = async (history) => {\n    try {\n      let response = await DELETE('history/delete', {\n        history: history,\n        userId: localStorage.getItem('userId')\n      });\n      if(response.success){\n        this.setState({user: response.data, error: ''});\n      } else {\n        this.setState({error: response.error});\n      }\n    } catch (error) {\n      this.setState({error: error.message});\n    }\n  }\n\n  editHistory = (history) => {\n    this.toggle();\n    this.setState({editingHistory: history});\n  }\n\n  updateHistory = async (oldHistory, newHistory, userId) => {\n    try {\n      let response = await PUT('history/update', {\n        oldHistory, newHistory, userId\n      });\n      if(response.success){\n        this.setState({user: response.data, error: ''});\n        this.toggle();\n      } else {\n        this.toggle();\n        this.setState({error: response.error})\n      }\n    } catch (error) {\n      this.toggle();\n      this.setState({error: error.message});\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        {!this.state.isLoggedIn ? <Redirect to=\"/login\"/> : null}\n        <NavbarComponent logoutAction={this.logout} isLoggedIn={this.state.isLoggedIn}/>\n        {this.state.error ? <div style={{color: 'red'}}>{this.state.error}</div> : null}\n        <BasicContainerComponent\n          title={this.mainTitle(this.state.user.monthlyAmount, this.state.user.dailyAmount)}\n          pageType='main'\n          mainRequest={(amount, type) => this.createHistory(amount, type, new Date(), localStorage.getItem('userId'))}\n        />\n        <BasicContainerComponent\n          title='History'\n          history={true}\n          historiesData={this.state.user.history ? this.state.user.history : []}\n          historyDelete={(history) => this.deleteHistory(history)}\n          historyEdit={(history) => this.editHistory(history)}\n        />\n        {\n          this.state.modalVisible ?\n          <Modal isOpen={this.state.modalVisible} toggle={this.toggle} fade={false}>\n            <ModalHeader toggle={this.toggle}>Edit history</ModalHeader>\n            <ModalBody>\n              <FormComponent\n                formType='edit'\n                mainAction={(amount, actionType) => this.updateHistory(this.state.editingHistory, {\n                  amount: amount,\n                  historyType: actionType,\n                  createdAt: new Date()\n                }, localStorage.getItem('userId'))}\n              />\n            </ModalBody>\n          </Modal> : null\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport '../styles/Error404.css';\n\nexport default class Error404 extends Component {\n  render(){\n    return(\n      <div id=\"notfound\">\n    \t\t<div class=\"notfound\">\n    \t\t\t<div class=\"notfound-404\">\n    \t\t\t\t<h1>Oops!</h1>\n    \t\t\t\t<h2>404 - The Page can't be found</h2>\n    \t\t\t</div>\n    \t\t\t<a href=\"/configure\">Go TO Homepage</a>\n    \t\t</div>\n    \t</div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\n\nimport LoginPage from './app/pages/LoginPage';\nimport RegisterPage from './app/pages/RegisterPage';\nimport ConfigurePage from './app/pages/ConfigurePage';\nimport MainPage from './app/pages/MainPage';\nimport Error404 from './app/pages/Error404';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Switch>\n              <Route exact path=\"/\" component={LoginPage}/>\n              <Route exact path=\"/login\" component={LoginPage}/>\n              <Route exact path=\"/register\" component={RegisterPage}/>\n              <Route exact path=\"/configure\" component={ConfigurePage}/>\n              <Route exact path=\"/main\" component={MainPage}/>\n              <Route component={Error404}/>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n","const validator = require('validator');\n\nfunction generateErrorObject(message){\n  return {\n    success: false,\n    message: message\n  };\n}\n\nmodule.exports = (userData) => {\n  if(userData.email && validator.isEmpty(userData.email)){\n    return generateErrorObject('Email is required');\n  }\n  if(userData.username && validator.isEmpty(userData.username)){\n    return generateErrorObject('Username is required');\n  }\n  if(userData.password && validator.isEmpty(userData.password)){\n    return generateErrorObject('Password is required');\n  }\n  if(userData.email && !validator.isLength(userData.email, {min: 10, max: 255})){\n    return generateErrorObject('Email length must be min 10 and max 255 characters');\n  }\n  if(userData.username && !validator.isLength(userData.username, {min: 6, max: 30})){\n    return generateErrorObject('Username length must be min 6 and max 30 characters');\n  }\n  if(userData.password && !validator.isLength(userData.password, {min: 6, max: 60})){\n    return generateErrorObject('Password length must be min 6 and max 60 characters');\n  }\n  if(userData.email && !validator.isEmail(userData.email)){\n    return generateErrorObject('Please type valid email');\n  }\n  if(userData.username && !validator.isAscii(userData.username)){\n    return generateErrorObject('Username is incorrect');\n  }\n  if(userData.repeatPassword && userData.repeatPassword !== userData.password){\n    return generateErrorObject('Please repeat password again');\n  }\n  return {\n    success: true\n  };\n}\n"],"sourceRoot":""}